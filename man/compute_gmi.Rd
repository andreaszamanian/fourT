% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_gmi.R
\name{compute_gmi}
\alias{compute_gmi}
\title{Compute glucose management indicator (GMI)}
\usage{
compute_gmi(
  df_dex,
  start = "default",
  end = "default",
  lookback = 90,
  freq = NULL,
  breaks = NULL,
  include_bv = TRUE
)
}
\arguments{
\item{df_dex}{Data frame outputted by read_dexcom}

\item{start}{Date-time. Computation window start date. Value of "default" means
function ignores this parameter and computes up to the start of the data.}

\item{end}{Date-time. Computation window end date. Value of "default" means
function ignores this parameter and computes up to the start of the data.}

\item{lookback}{Integer. Number of days to look back for GMI computations. Must be greater than or equal
to 14 and less than or equal to 90. Defaults to 90 days.}

\item{freq}{Integer. Time interval frequency (in days) for
computation; e.g. every 14 days, every 30 days, etc. The default value is 14 days to match
convention in 4T studies.}

\item{breaks}{Numeric vector. Specify range computations manually by month, e.g. c(0, 1, 4.5, 7.5, 10.5, 13.5)
would report values at study months 0, 1, 4.5, 7.5, 10.5, and 13.5. Similarly to the usage with the freq
parameter, if there are less than 14 days of data in a given breaks interval then GMI is set to NA}

\item{include_bv}{If TRUE, "High" and "Low" flags are converted to value 400 and 40
respectively and used in computations. If FALSE, this conversion does not happen;
computations ignore the "High" and "Low" flags.}
}
\value{
Data frame with GMI metrics. Three columns: bg_mean, bg_total, gmi. bg_total is the sum of all
bg values in the time frame, bg_mean is that value divided by n, gmi is then computed by the above formula.
}
\description{
GMI is calculated per Bergenstal & Beck (2018) as an approximation of HbA1c (\%).
The GMI computation uses up to 90 days of prior glucose readings, and no less than 14 days; this
is reflected in the limitations on the lookback parameter.
The explicit formula is Formula: 3.31 + 0.02392*avg_glucose.
Here 'avg_glucose' is the sensor glucose readings averaged over up to 90 days.
For days with less than 14 days in the its lookback window, GMI is set to NA
}
\details{
For more examples see the 'Getting started' vignette.
}
\examples{
bg_date_time <- as.POSIXct(c("2020-01-01 01:01:01", "2020-03-01 01:01:01",
"2020-06-01 01:01:01", "2020-07-01 01:01:01", "2020-09-09 01:01:01", "2020-12-09 01:01:01",
"2021-01-01 01:01:01"), tz = "UTC")
bg_value_num <- c(67, 100, 150, 123, 124, 80, 300)
record_id <- c(010101, 010101, 010101, 010101, 010101, 010101, 010101)
bg_value_flag <- c(NA, NA, NA, NA, NA, NA, NA)


df <- dplyr::tibble(bg_date_time = bg_date_time, bg_value_num = bg_value_num, record_id = record_id,
bg_value_flag = bg_value_flag)


compute_gmi(df, freq = 14)
}
